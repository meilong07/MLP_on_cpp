#include "NeuralNetwork.h"

int main()
{
    NeuralNetwork net(3, 5, 1, 0.1);
    std::vector<std::vector<double>> inputs = {
    {0.3, 0.1, 0.1},  // 30 м², 1 кімната, 1 поверх
    {0.5, 0.2, 0.5},  // 50 м², 2 кімнати, 5 поверх
    {0.7, 0.3, 0.9},  // 70 м², 3 кімнати, 9 поверх
    {0.9, 0.4, 1.2},  // 90 м², 4 кімнати, 12 поверх
    {0.4, 0.1, 0.2},  // 40 м², 1 кімната, 2 поверх
    {0.6, 0.2, 0.7},  // 60 м², 2 кімнати, 7 поверх
    {0.8, 0.3, 1.0},  // 80 м², 3 кімнати, 10 поверх
    {1.0, 0.5, 1.4}   // 100 м², 5 кімнат, 14 поверх
    };

    std::vector<std::vector<double>> targets = {
        {0.3},  // 30 000
        {0.6},  // 60 000
        {0.85}, // 85 000
        {1.1},  // 110 000
        {0.4},  // 40 000
        {0.65}, // 65 000
        {0.95}, // 95 000
        {1.25}  // 125 000
    };

    net.train(inputs, targets, 100000);

    std::vector<std::vector<double>> test_inputs = {
    {0.6, 0.2, 0.5}, // 60 м², 2 кімнати, 5 поверх
    {0.85, 0.3, 1.1}, // 85 м², 3 кімнати, 11 поверх
    {0.45, 0.1, 0.3} // 45 м², 1 кімнати, 3 поверх
    };

    for (const auto& test_input : test_inputs) {
        auto result = net.forward(test_input);
        std::cout << "Prediction: " << result[0] * 100000 << "$" << std::endl;
    }
}

